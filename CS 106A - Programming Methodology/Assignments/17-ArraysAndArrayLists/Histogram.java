/* * File: Histogram.java * -------------------- * This program reads a list of exam scores, with one score per line. * It then displays a histogram of those scores, divided into the * ranges 0Ð9, 10Ð19, 20Ð29, and so forth, up to the range containing * only the value 100. */import acm.program.*;import acm.util.*;import java.io.*;import java.util.*;public class Histogram extends ConsoleProgram {		public void run() {		double[] scores = readScoresArray(DATA_FILE);		println("length = " + scores.length);		initHistogram();		createHistogram(scores);		printHistogram();	}/* Initializes the histogram array */	private void initHistogram() {		histogramArray = new int[11];		for (int i = 0; i <= 10; i++) {			histogramArray[i] = 0;		}	}/* Creates a histogram from the array of scores */	private void createHistogram(double[] scores) {		for (int i = 0; i < scores.length; i++) {			double score = scores[i];			if (score < 0 || score > 100) {				throw new ErrorException("That score is out of range");			} else {				int range = (int) (score / 10);				histogramArray[range]++;			}		}	}/* Displays the histogram */	private void printHistogram() {		for (int range = 0; range <= 10; range++) {			String stars = createStars(histogramArray[range]);			println(createLabelForRange(range) + ": " + stars);		}	}/* Creates the label indicating the range */	private String createLabelForRange(int range) {		switch (range) {			case  0: return "00-09";			case 10: return "  100";			default: return (10 * range) + "-" + (10 * range + 9);		}	}/* Creates a string consisting of n stars */	private String createStars(int n) {		String stars = "";		for (int i = 0; i < n; i++) {			stars += "*";		}		return stars;	}/* Private instance variables */	private int[] histogramArray;/* Name of the data file */	private static final String DATA_FILE = "Midterm.txt";/* Standard Java entry point *//* This method can be eliminated in most Java environments */	public static void main(String[] args) {		new Histogram().start(args);	}/* Reads a data file containing doubles into an array */	private double[] readScoresArray(String filename) {		try {			BufferedReader rd = new BufferedReader(new FileReader(filename));			ArrayList<Double> list = new ArrayList<Double>();			while (true) {				String line = rd.readLine();				if (line == null) break;				list.add(Double.parseDouble(line));			}			double[] array = new double[list.size()];			for (int i = 0; i < array.length; i++) {				array[i] = list.get(i).doubleValue();			}			return array;		} catch (IOException ex) {			throw new ErrorException(ex);		}	}}	